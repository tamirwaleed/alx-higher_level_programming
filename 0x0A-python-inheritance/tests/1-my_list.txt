Tests for the MyList class
==========================

Check the module,class and method docstrings
    >>> docum = __import__("1-my_list").__doc__  
    >>> cocum = __import__("1-my_list").MyList.__doc__
    >>> mocum = __import__("1-my_list").MyList.print_sorted.__doc__
    >>> MyList = __import__('1-my_list').MyList
    >>> len(docum) > 1
    True
    >>> len(cocum) > 1
    True
    >>> len(mocum) > 1
    True

Check inheritance
    >>> issubclass(MyList, list)
    True

Check for empty
    >>> em = MyList()
    >>> em.print_sorted()
    []

Check appending
    >>> em.append(1)
    >>> em.append(2)
    >>> em.append(3)
    >>> em.append(4)
    >>> print(em)
    [1, 2, 3, 4]

Check order for already sorted
    >>> em.print_sorted()
    [1, 2, 3, 4]

Check for reverse
    >>> em1 = MyList()
    >>> em1.append(4)
    >>> em1.append(3)
    >>> em1.append(2)
    >>> em1.append(1)
    >>> em1.print_sorted()
    [1, 2, 3, 4]
    >>> print(em1)
    [4, 3, 2, 1]

Check for negative and Zeros
    >>> em2 = MyList()
    >>> em2.append(4)
    >>> em2.append(-8)
    >>> em2.append(0)
    >>> em2.append(-4)
    >>> em2.print_sorted()
    [-8, -4, 0, 4]
    >>> print(em2)
    [4, -8, 0, -4]

Check for NULL
>>> em3 = MyList()
>>> em3.append(NULL)
Traceback (most recent call last):
    ...
NameError: name 'NULL' is not defined

>>> print(em3)
[]

>>> em3.print_sorted()
[]

Checking NaN object
>>> obj4 = MyList()

>>> obj4.append(NaN)
Traceback (most recent call last):
    ...
NameError: name 'NaN' is not defined

Check arguments
    >>> em.print_sorted(1)
    Traceback (most recent call last):
    ...
    TypeError: print_sorted() takes 1 positional argument but 2 were given
