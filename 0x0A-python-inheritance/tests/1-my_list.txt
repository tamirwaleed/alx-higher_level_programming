Tests for task 1
===============
Import
>>> MyList = __import__('1-my_list').MyList

>>> tm = MyList()
>>> type(tm) == MyList
True

>>> ramt = MyList()
>>> isinstance(ramt, list)
True

>>> type(MyList.__dict__['print_sorted'])
<class 'function'>


>>> tam.__class__.print_sorted()
Traceback (most recent call last):
TypeError: print_sorted() missing 1 required positional argument: 'self'

>>> tam.print_sorted([7, 22, 15])
Traceback (most recent call last):
TypeError: print_sorted() takes 1 positional argument but 2 were given


>>> tam.print_sorted([7, 4, 6], 87)
Traceback (most recent call last):
TypeError: print_sorted() takes 1 positional argument but 3 were given


>>> tam = MyList()
>>> tam.print_sorted()
[]

>>> tam = MyList([1, 5, 3, 4, 2])
>>> tam.print_sorted()
[1, 2, 3, 4, 5]

>>> TAMR = MyList([3, 11, 6, -45, 28, 107, 1])
>>> TAMR.print_sorted()
[-45, 1, 3, 6, 11, 28, 107]
>>> TAMR
[3, 11, 6, -45, 28, 107, 1]

>>> tamir = MyList([-7, 0, 3, 5, 8, 13, 89])
>>> tamir.print_sorted()
[-7, 0, 3, 5, 8, 13, 89]

>>> tamir = MyList()
>>> tamir.append(6)
>>> tamir
[6]
