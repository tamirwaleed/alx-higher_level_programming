Documentation for base geometry
===============================


>>> BaseGeometry = __import__('7-base_geometry').BaseGeometry
>>> bg = BaseGeometry()
>>> type(bg).__name__
'BaseGeometry'
>>> bg.area()
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/root/alx-higher_level_programming/0x0A-python-inheritance/7-base_geometry.py", line 9, in area
    raise Exception("area() is not implemented")
Exception: area() is not implemented
>>> bg.integer_validator("test", 10)
>>> bg.integer_validator("test", 0)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/root/alx-higher_level_programming/0x0A-python-inheritance/7-base_geometry.py", line 15, in integer_validator
    raise ValueError("{} must be greater than 0".format(name))
ValueError: test must be greater than 0
>>> bg.integer_validator("test", -5)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/root/alx-higher_level_programming/0x0A-python-inheritance/7-base_geometry.py", line 15, in integer_validator
    raise ValueError("{} must be greater than 0".format(name))
ValueError: test must be greater than 0
>>> bg.integer_validator("test", 'a')
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/root/alx-higher_level_programming/0x0A-python-inheritance/7-base_geometry.py", line 13, in integer_validator
    raise TypeError("{} must be an integer".format(name))
TypeError: test must be an integer
>>> bg.integer_validator("test", True)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/root/alx-higher_level_programming/0x0A-python-inheritance/7-base_geometry.py", line 13, in integer_validator
    raise TypeError("{} must be an integer".format(name))
TypeError: test must be an integer
>>> bg.integer_validator("test", None)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/root/alx-higher_level_programming/0x0A-python-inheritance/7-base_geometry.py", line 13, in integer_validator
    raise TypeError("{} must be an integer".format(name))
TypeError: test must be an integer
>>> dc = __import__('7-base_geometry').__doc__
>>> len(dc)
15
>>> cd = __import__('7-base_geometry').BaseGeometry.__doc__
>>> len(cd)
0
