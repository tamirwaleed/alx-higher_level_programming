>>> add_integer = __import__('0-add_integer').add_integer
>>> type(add_integer)
<class 'function'>
>>> type(add_integer.__dict__)
<class 'dict'>
>>> (add_integer.__dict__)
{}
>>> add_integer()
Traceback (most recent call last):
TypeError: add_integer() missing 1 required positional argument: 'a'
>>> add_integer(1)
99
>>> add_integer(1,2,3)
Traceback (most recent call last):
TypeError: add_integer() takes from 1 to 2 positional arguments but 3 were given
>>> add_integer(1,-1)
0
>>> add_integer(0)
98
>>> add_integer(None)
Traceback (most recent call last):
TypeError: a must be an integer
>>> add_integer([1,2])
Traceback (most recent call last):
TypeError: a must be an integer
>>> add_integer((1,2),87)
Traceback (most recent call last):
TypeError: a must be an integer
>>> add_integer("stringgg",87)
Traceback (most recent call last):
TypeError: a must be an integer
>>> add_integer(5,"stringgg")
Traceback (most recent call last):
TypeError: b must be an integer
>>> add_integer(5,inf)
Traceback (most recent call last):
NameError: name 'inf' is not defined
>>> add_integer(5,-45)
-40
>>> add_integer(5,7.5)
12
>>> add_integer(5.6,7.5)
12
