Testing for 4-print_square
==========================

>>> print_square = __import__('4-print_square').print_square
>>> len(print_square.__doc__) > 1
True
>>> type(print_square)
<class 'function'>
>>> print_square(2)
##
##
>>> print_square(2.2)
Traceback (most recent call last):
TypeError: size must be an integer
>>> print_square("2")
Traceback (most recent call last):
TypeError: size must be an integer
>>> print_square(0)
<BLANKLINE>
>>> print_square(None)
Traceback (most recent call last):
TypeError: size must be an integer
>>> print_square(-3)
Traceback (most recent call last):
ValueError: size must be >= 0
>>> print_square(-3.4)
Traceback (most recent call last):
TypeError: size must be an integer
>>> print_square()
Traceback (most recent call last):
TypeError: print_square() missing 1 required positional argument: 'size'
>>> print_square(2,4)
Traceback (most recent call last):
TypeError: print_square() takes 1 positional argument but 2 were given
>>> print_square(float("inf"))
Traceback (most recent call last):
TypeError: size must be an integer
>>> print_square(float("nan"))
Traceback (most recent call last):
TypeError: size must be an integer
>>> print_square("")
Traceback (most recent call last):
TypeError: size must be an integer
>>> print_square([2])
Traceback (most recent call last):
TypeError: size must be an integer
>>> print_square((2,))
Traceback (most recent call last):
TypeError: size must be an integer
